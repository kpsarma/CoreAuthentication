// <auto-generated />
using System;
using CoreAuthentication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreAuthentication.Migrations
{
    [DbContext(typeof(aspnetWebApplication9576319532204474D8C2D4A11DD127D27))]
    [Migration("20181026053740_Teacher")]
    partial class Teacher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreAuthentication.Models.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("CountryId")
                        .HasMaxLength(450);

                    b.Property<string>("DistrinctId")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("StateId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Class", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CoreAuthentication.Models.District", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("CountryId")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("StateId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("CoreAuthentication.Models.EducationBoard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EducationBoard");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Email", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Email1")
                        .HasColumnName("EMail")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("CoreAuthentication.Models.EmailsGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EmailsGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.EmailsOfEmailsGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("EmailId")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal?>("EmailsGroupId")
                        .HasColumnType("numeric(12, 0)");

                    b.HasKey("Id");

                    b.ToTable("EmailsOfEmailsGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Fax", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Fax1")
                        .HasColumnName("Fax")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Fax");
                });

            modelBuilder.Entity("CoreAuthentication.Models.FaxsGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("FaxsGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.FaxsOfFaxsGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("FaxId")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal?>("FaxsGroupId")
                        .HasColumnType("numeric(12, 0)");

                    b.HasKey("Id");

                    b.ToTable("FaxsOfFaxsGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Phone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal?>("PhNumber")
                        .HasColumnType("numeric(12, 0)");

                    b.HasKey("Id");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("CoreAuthentication.Models.PhonesGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PhonesGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.PhonesOfPhonesGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<decimal?>("PhoneGroupId")
                        .HasColumnType("numeric(12, 0)");

                    b.Property<string>("PhoneId")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PhonesOfPhonesGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.School", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(450);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(450);

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(450);

                    b.Property<string>("CityId")
                        .HasMaxLength(450);

                    b.Property<string>("CountryId")
                        .HasMaxLength(450);

                    b.Property<string>("DistrictId")
                        .HasMaxLength(450);

                    b.Property<string>("EmailsGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("FaxsGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PhonesGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("Pin")
                        .HasColumnName("PIN")
                        .HasMaxLength(450);

                    b.Property<string>("StateId")
                        .HasMaxLength(450);

                    b.Property<string>("WebSitesGroupId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("CoreAuthentication.Models.State", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("CountryId")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("CoreAuthentication.Models.StudentAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(450);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(450);

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(450);

                    b.Property<string>("CityId")
                        .HasMaxLength(450);

                    b.Property<string>("CountryId")
                        .HasMaxLength(450);

                    b.Property<string>("DistrictId")
                        .HasMaxLength(450);

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailsGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("FatherName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FaxsGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("GurdianName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MotherName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PhonesGroupId")
                        .HasMaxLength(450);

                    b.Property<string>("Pin")
                        .HasColumnName("PIN")
                        .HasMaxLength(450);

                    b.Property<string>("StateId")
                        .HasMaxLength(450);

                    b.Property<string>("WebSitesGroupId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("CoreAuthentication.Models.StudentEducation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("BoardId")
                        .HasMaxLength(450);

                    b.Property<string>("ClassId")
                        .HasMaxLength(450);

                    b.Property<DateTime?>("ForAcademicYearFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ForAcademicYearTo")
                        .HasColumnType("datetime");

                    b.Property<string>("SchoolId")
                        .HasMaxLength(450);

                    b.Property<string>("StudentId")
                        .HasMaxLength(450);

                    b.Property<string>("SyllabusId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("StudentEducation");
                });

            modelBuilder.Entity("CoreAuthentication.Models.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("CoreAuthentication.Models.SyllabusType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SyllabusType");
                });

            modelBuilder.Entity("CoreAuthentication.Models.WebSite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("WebSite1")
                        .HasColumnName("WebSite")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("WebSite");
                });

            modelBuilder.Entity("CoreAuthentication.Models.WebSitesGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("WebSitesGroup");
                });

            modelBuilder.Entity("CoreAuthentication.Models.WebSitesOfWebSitesGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("WebSiteId")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal?>("WebSitesGroupId")
                        .HasColumnType("numeric(12, 0)");

                    b.HasKey("Id");

                    b.ToTable("WebSitesOfWebSitesGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
